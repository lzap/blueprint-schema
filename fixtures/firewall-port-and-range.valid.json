{
  "valid": false,
  "evaluationPath": "",
  "schemaLocation": "",
  "instanceLocation": "",
  "annotations": {
    "description": "Blueprint type prototype\n\nThis is just a brief example of a common blueprint structure. Just few fields\nwere selected to demonstrate the JSON schema.\n\nThese Go comments do appear in the JSON Schema so the final version of the\nblueprint will be broken up into multiple files and the comments will be\nmoch more extensive.\n\nTODO: Break all anonymous struct into named structs. Break this .go file into\nmultiple files."
  },
  "errors": {
    "properties": "Property 'network' does not match the schema"
  },
  "details": [
    {
      "valid": false,
      "evaluationPath": "",
      "schemaLocation": "",
      "instanceLocation": "",
      "errors": {
        "properties": "Property 'firewall' does not match the schema"
      }
    },
    {
      "valid": false,
      "evaluationPath": "",
      "schemaLocation": "",
      "instanceLocation": "",
      "errors": {
        "properties": "Property 'services' does not match the schema"
      }
    },
    {
      "valid": false,
      "evaluationPath": "/oneOf/0",
      "schemaLocation": "https://github.com/osbuild/blueprint-schema/blueprint#/oneOf/0",
      "instanceLocation": "",
      "annotations": {
        "description": "Networking details"
      },
      "errors": {
        "$ref": "Value does not match the reference schema"
      }
    },
    {
      "valid": false,
      "evaluationPath": "/oneOf/0",
      "schemaLocation": "https://github.com/osbuild/blueprint-schema/blueprint#/oneOf/0",
      "instanceLocation": "",
      "annotations": {
        "description": "Services to enable or disable. The service can be defined via an assigned IANA name,\nport number or port range.\n\nServices are processed in order, when a service is disabled and then accidentally enabled\nvia a port or a port range, the service will be enabled in the end."
      },
      "errors": {
        "items": "Item at index 0 does not match the schema"
      }
    },
    {
      "valid": false,
      "evaluationPath": "/oneOf/1",
      "schemaLocation": "https://github.com/osbuild/blueprint-schema/blueprint#/oneOf/1",
      "instanceLocation": "",
      "errors": {
        "type": "Value is array but should be null"
      }
    },
    {
      "valid": false,
      "evaluationPath": "/oneOf/1",
      "schemaLocation": "https://github.com/osbuild/blueprint-schema/blueprint#/oneOf/1",
      "instanceLocation": "",
      "errors": {
        "type": "Value is object but should be null"
      }
    },
    {
      "valid": false,
      "evaluationPath": "/properties/firewall",
      "schemaLocation": "https://github.com/osbuild/blueprint-schema/blueprint#/properties/firewall",
      "instanceLocation": "/firewall",
      "annotations": {
        "description": "Firewall details - package firewalld must be installed in the image."
      },
      "errors": {
        "$ref": "Value does not match the reference schema"
      }
    },
    {
      "valid": true,
      "evaluationPath": "/properties/name",
      "schemaLocation": "https://github.com/osbuild/blueprint-schema/blueprint#/properties/name",
      "instanceLocation": "/name",
      "annotations": {
        "description": "The name attribute is a string that contains the name of the blueprint. It can contain spaces,\nbut they may be converted to dash characters during build. It should be short and descriptive."
      }
    },
    {
      "valid": false,
      "evaluationPath": "/properties/network",
      "schemaLocation": "https://github.com/osbuild/blueprint-schema/blueprint#/properties/network",
      "instanceLocation": "/network",
      "errors": {
        "oneOf": "Value does not match the oneOf schema"
      }
    },
    {
      "valid": false,
      "evaluationPath": "/properties/services",
      "schemaLocation": "https://github.com/osbuild/blueprint-schema/blueprint#/properties/services",
      "instanceLocation": "/services",
      "errors": {
        "oneOf": "Value does not match the oneOf schema"
      }
    }
  ]
}