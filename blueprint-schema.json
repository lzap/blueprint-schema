{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/osbuild/blueprint-schema/blueprint",
  "$defs": {
    "Accounts": {
      "properties": {
        "users": {
          "oneOf": [
            {
              "items": {
                "$ref": "#/$defs/UserAccount"
              },
              "type": "array",
              "description": "Operating system user accounts to be created on the image."
            },
            {
              "type": "null"
            }
          ]
        },
        "groups": {
          "oneOf": [
            {
              "items": {
                "$ref": "#/$defs/GroupAccount"
              },
              "type": "array",
              "description": "Operating system group accounts to be created on the image."
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "type": "object",
      "description": "accounts:\n\n\tusers:\n\t  - name: \"lzap\"\n\t    description: \"\"\n\t    password: \"\"\n\t    ssh_keys:\n\t      - \"ssh-key 1234\"\n\t    home: \"/home/lzap\"\n\t    shell: \"/usr/bin/bash\"\n\t    uid: 1001\n\t    gid: 1001\n\t    groups: [\"wheel\", \"operators\"]\n\t    expires: 2050-05-13\n\tgroups:\n\t  - name: \"operators\"\n\t    gid: 1042"
    },
    "ConnectorRegistration": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enables rhc (Red Hat Connector) during boot."
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "enabled"
      ]
    },
    "Containers": {
      "properties": {
        "source": {
          "type": "string",
          "description": "Container image URL is a reference to a container image at a registry."
        },
        "name": {
          "type": "string",
          "description": "Container name is an optional string to set the name under which the container image will\nbe saved in the image. If not specified name falls back to the same value as source."
        },
        "tls_verify": {
          "type": "boolean",
          "description": "Verify TLS connection, default is true.",
          "default": true
        },
        "local_storage": {
          "type": "string",
          "description": "Whether to pull the container image from the host's local-storage."
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "source",
        "name"
      ]
    },
    "DNF": {
      "properties": {
        "packages": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Packages to install. Package name or NVRA is accepted as long as DNF can\nresolve it. Examples: vim-enhanced, vim-enhanced-9.1.866-1 or vim-enhanced-9.1.866-1.fc41.x86_64.\nThe packages can also be specified as @group_name to install all packages in the group."
            },
            {
              "type": "null"
            }
          ]
        },
        "groups": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Groups to install, must match exactly. Groups describes groups of packages to be installed into\nthe image. Package groups are defined in the repository metadata. Each group has a descriptive name\nused primarily for display in user interfaces and an ID more commonly used in kickstart files.\nHere, the ID is the expected way of listing a group. Groups have three different ways of categorizing\ntheir packages: mandatory, default, and optional. For the purposes of blueprints, only mandatory\nand default packages will be installed. There is no mechanism for selecting optional packages."
            },
            {
              "type": "null"
            }
          ]
        },
        "import_keys": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Additional file paths to the GPG keys to import. The files must be present in the image.\nDoes not support importing from URLs."
            },
            {
              "type": "null"
            }
          ]
        },
        "modules": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Modules to enable or disable"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "FDORegistration": {
      "oneOf": [
        {
          "required": [
            "diun_pub_key_insecure"
          ],
          "title": "fdo_insecure"
        },
        {
          "required": [
            "diun_pub_key_hash"
          ],
          "title": "fdo_hash"
        },
        {
          "required": [
            "diun_pub_key_root_certs"
          ],
          "title": "fdo_rootcerts"
        }
      ],
      "properties": {
        "manufacturing_server_url": {
          "type": "string",
          "description": "FDO manufacturing server URL."
        },
        "diun_pub_key_insecure": {
          "type": "boolean",
          "description": "FDO insecure option. When set, both hash or root certs must not be set."
        },
        "diun_pub_key_hash": {
          "type": "string",
          "description": "FDO server public key hex-encoded hash. Cannot be used together with insecure option or root certs."
        },
        "diun_pub_key_root_certs": {
          "type": "string",
          "description": "FDO server public key root certificate path. Cannot be used together with insecure option or hash."
        },
        "di_mfg_string_type_mac_iface": {
          "type": "string",
          "description": "Optional interface name for the MAC address."
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "manufacturing_server_url"
      ]
    },
    "FIPS": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enables the system FIPS mode (disabled by default). Currently only edge-raw-image, edge-installer,\nedge-simplified-installer, edge-ami and edge-vsphere images support this customization."
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "GroupAccount": {
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 256,
          "pattern": "^[a-zA-Z0-9_.][a-zA-Z0-9_.$-]*$",
          "description": "Group name. Accepted characters: lowercase letters, digits, underscores, dollars, and hyphens.\nName must not start with a hyphen. Maximum length is 256 characters. The validation pattern is\na relaxed version of https://github.com/shadow-maint/shadow/blob/master/lib/chkname.c"
        },
        "gid": {
          "type": "integer",
          "minimum": 1,
          "description": "The group ID (GID) of the group."
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "name"
      ]
    },
    "InsightsRegistration": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enables insights client during boot."
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "enabled"
      ]
    },
    "Kernel": {
      "properties": {
        "package": {
          "type": "string",
          "description": "Kernel DNF package name to replace the standard kernel with."
        },
        "cmdline_append": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "An optional string to append arguments to the bootloader kernel command line. The list\nwill be concatenated with spaces."
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Locale": {
      "properties": {
        "languages": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "The languages attribute is a list of strings that contains the languages to be installed on the image.\nTo list available languages, run: localectl list-locales",
              "default": [
                "en_US.UTF-8"
              ]
            },
            {
              "type": "null"
            }
          ]
        },
        "keyboards": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "The keyboards attribute is a list of strings that contains the keyboards to be installed on the image.\nTo list available keyboards, run: localectl list-keymaps",
              "default": [
                "us"
              ]
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Network": {
      "properties": {
        "firewall": {
          "$ref": "#/$defs/NetworkFirewall",
          "description": "Firewall details - package firewalld must be installed in the image."
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "NetworkFirewall": {
      "properties": {
        "services": {
          "oneOf": [
            {
              "items": {
                "oneOf": [
                  {
                    "required": [
                      "service"
                    ],
                    "title": "firewall_service"
                  },
                  {
                    "required": [
                      "port"
                    ],
                    "title": "firewall_port"
                  },
                  {
                    "required": [
                      "from",
                      "to"
                    ],
                    "title": "firewall_from_to"
                  }
                ],
                "properties": {
                  "service": {
                    "type": "string",
                    "minLength": 2
                  },
                  "port": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                  },
                  "from": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                  },
                  "to": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                  },
                  "protocol": {
                    "type": "string",
                    "enum": [
                      "tcp",
                      "udp",
                      "any"
                    ],
                    "default": "any"
                  },
                  "enabled": {
                    "type": "boolean",
                    "default": true
                  }
                },
                "additionalProperties": false,
                "type": "object"
              },
              "type": "array",
              "description": "Services to enable or disable. The service can be defined via an assigned IANA name,\nport number or port range.\n\nServices are processed in order, when a service is disabled and then accidentally enabled\nvia a port or a port range, the service will be enabled in the end."
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "OpenSCAP": {
      "properties": {
        "profile_id": {
          "type": "string",
          "description": "The desired security profile ID."
        },
        "datastream": {
          "type": "string",
          "description": "Datastream to use for the scan. The datastream is the path to the SCAP datastream file to use for the scan.\nIf the datastream parameter is not provided, a sensible default based on the selected distro will be chosen."
        },
        "tailoring": {
          "oneOf": [
            {
              "$ref": "#/$defs/OpenSCAPTailoring",
              "description": "An optional OpenSCAP tailoring information. Can be done via profile selection or tailoring JSON file.\n\nIn case of profile selection, a tailoring file with a new tailoring profile ID is created and saved to the image.\nThe new tailoring profile ID is created by appending the _osbuild_tailoring suffix to the base profile.\nFor example, given tailoring options for the cis profile, tailoring profile\nxccdf_org.ssgproject.content_profile_cis_osbuild_tailoring will be created. The default namespace of the rules\nis org.ssgproject.content, so the prefix may be omitted for rules under this namespace, i.e.\norg.ssgproject.content_grub2_password and grub2_password are functionally equivalent.\nThe generated tailoring file is saved to the image as /usr/share/xml/osbuild-oscap-tailoring/tailoring.xml or,\nfor newer releases, in the /oscap_data directory, this is the location used for other OpenSCAP related artifacts.\n\nIt is also possible to use JSON tailoring. In that case, custom JSON file must be provided using the blueprint and\nused in json_filepath field alongside with json_profile_id field. The generated XML tailoring file is saved to the\nimage as /oscap_data/tailoring.xml."
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "profile_id"
      ]
    },
    "OpenSCAPTailoring": {
      "anyOf": [
        {
          "required": [
            "selected"
          ],
          "title": "tailoring_selected"
        },
        {
          "required": [
            "selected",
            "unselected"
          ],
          "title": "tailoring_both"
        },
        {
          "required": [
            "unselected"
          ],
          "title": "tailoring_unselected"
        },
        {
          "required": [
            "json_profile_id",
            "json_filepath"
          ],
          "title": "tailoring_json"
        }
      ],
      "properties": {
        "selected": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Selected rules, cannot be used with json_profile_id and json_filepath."
            },
            {
              "type": "null"
            }
          ]
        },
        "unselected": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Unselected rules, cannot be used with json_profile_id and json_filepath."
            },
            {
              "type": "null"
            }
          ]
        },
        "json_profile_id": {
          "type": "string",
          "description": "JSON profile ID, must be used with json_filepath and cannot be used with selected and unselected fields."
        },
        "json_filepath": {
          "type": "string",
          "description": "JSON filepath, must be used with json_profile_id and cannot be used with selected and unselected fields."
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "RedHatRegistration": {
      "properties": {
        "activation_key": {
          "type": "string",
          "description": "Subscription manager activation key to use during registration. A list of keys to use to redeem or apply\nspecific subscriptions to the system."
        },
        "organization": {
          "type": "string",
          "description": "Subscription manager organization name to use during registration."
        },
        "subscription_manager": {
          "oneOf": [
            {
              "$ref": "#/$defs/SubscriptionManagerRegistration",
              "description": "Subscription manager details (internal use only). The customization expects that subscription-manager\npackage is installed in the image, which is by default part of the RHEL distribution bootable images.\nTo explicitly install the package, add it to the packages section in the blueprint.\nThe customization is not supported on Fedora distribution images."
            },
            {
              "type": "null"
            }
          ]
        },
        "insights": {
          "oneOf": [
            {
              "$ref": "#/$defs/InsightsRegistration",
              "description": "Red Hat Insights client details."
            },
            {
              "type": "null"
            }
          ]
        },
        "connector": {
          "oneOf": [
            {
              "$ref": "#/$defs/ConnectorRegistration",
              "description": "Red Hat console.redhat.com connector (rhc) details."
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Registration": {
      "properties": {
        "redhat": {
          "$ref": "#/$defs/RedHatRegistration",
          "description": "Registration details for Red Hat operating system images."
        },
        "fdo": {
          "oneOf": [
            {
              "$ref": "#/$defs/FDORegistration",
              "description": "FDO allows users to configure FIDO Device Onboard device initialization parameters. It is only available\nwith the edge-simplified-installer or iot-simplified-installer image types."
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "SubscriptionManagerRegistration": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enables the subscription-manager DNF plugin.",
          "default": true
        },
        "product_plugin_enabled": {
          "type": "boolean",
          "description": "Enables the product-id DNF plugin.",
          "default": true
        },
        "repository_management": {
          "type": "boolean",
          "description": "Enabled repository_management plugin configuration.",
          "default": true
        },
        "auto_registration": {
          "type": "boolean",
          "description": "Enabled auto_registration plugin configuration.",
          "default": true
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "enabled",
        "product_plugin_enabled",
        "repository_management",
        "auto_registration"
      ]
    },
    "Systemd": {
      "properties": {
        "enabled": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "The enabled attribute is a list of strings that contains the systemd units to be enabled."
            },
            {
              "type": "null"
            }
          ]
        },
        "disabled": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "The disabled attribute is a list of strings that contains the systemd units to be disabled."
            },
            {
              "type": "null"
            }
          ]
        },
        "masked": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "The masked attribute is a list of strings that contains the systemd units to be masked."
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "TimeDate": {
      "properties": {
        "timezone": {
          "type": "string",
          "description": "System time zone. Defaults to UTC.\nTo list available time zones run: timedatectl list-timezones",
          "default": "UTC"
        },
        "ntp_servers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "An optional list of strings containing NTP servers to use. If not provided the distribution defaults are used"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "timezone"
      ]
    },
    "UserAccount": {
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 256,
          "pattern": "^[a-zA-Z0-9_.][a-zA-Z0-9_.$-]*$",
          "description": "Account name. Accepted characters: lowercase letters, digits, underscores, dollars, and hyphens.\nName must not start with a hyphen. Maximum length is 256 characters. The validation pattern is\na relaxed version of https://github.com/shadow-maint/shadow/blob/master/lib/chkname.c"
        },
        "description": {
          "type": "string",
          "maxLength": 4096,
          "description": "A longer description of the account."
        },
        "password": {
          "type": "string",
          "description": "Password either in plain text or encrypted form. If the password is not provided, the account will be\nlocked and the user will not be able to log in with a password. The password can be encrypted using\nthe crypt(3) function. The format of the encrypted password is $id$salt$hashed,\nwhere $id is the algorithm used (1, 5, 6, or 2a)."
        },
        "ssh_keys": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "SSH keys to be added to the account's authorized_keys file."
        },
        "home": {
          "type": "string",
          "description": "The home directory of the user."
        },
        "shell": {
          "type": "string",
          "description": "The shell of the user."
        },
        "uid": {
          "type": "integer",
          "minimum": 1,
          "description": "The user ID (UID) of the user."
        },
        "gid": {
          "type": "integer",
          "minimum": 1,
          "description": "The primary group ID (GID) of the user."
        },
        "groups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Additional groups that the user should be a member of."
        },
        "expires": {
          "type": "string",
          "format": "date",
          "description": "The expiration date of the account in the format YYYY-MM-DD."
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "name"
      ]
    }
  },
  "properties": {
    "name": {
      "type": "string",
      "description": "The name attribute is a string that contains the name of the blueprint. It can contain spaces,\nbut they may be converted to dash characters during build. It should be short and descriptive."
    },
    "description": {
      "type": "string",
      "description": "The description attribute is a string that can be a longer description of the blueprint and is\nonly used for display purposes."
    },
    "hostname": {
      "type": "string",
      "description": "Hostname is an optional string that can be used to configure the hostname of the final image."
    },
    "kernel": {
      "oneOf": [
        {
          "$ref": "#/$defs/Kernel",
          "description": "Custom Linux kernel details, optional."
        },
        {
          "type": "null"
        }
      ]
    },
    "fips": {
      "oneOf": [
        {
          "$ref": "#/$defs/FIPS",
          "description": "FIPS details, optional."
        },
        {
          "type": "null"
        }
      ]
    },
    "dnf": {
      "oneOf": [
        {
          "$ref": "#/$defs/DNF",
          "description": "DNF package managers details. When using virtual provides as the package name the version glob\nshould be *. And be aware that you will be unable to freeze the blueprint. This is because the\nprovides will expand into multiple packages with their own names and versions."
        },
        {
          "type": "null"
        }
      ]
    },
    "containers": {
      "oneOf": [
        {
          "items": {
            "$ref": "#/$defs/Containers"
          },
          "type": "array",
          "description": "Containers to be pulled during the image build and stored in the image at the default local\ncontainer storage location that is appropriate for the image type, so that all supported container\ntools like podman and cri-o will be able to work with it.\nThe embedded containers are not started, to do so you can create systemd unit files or quadlets with\nthe files customization."
        },
        {
          "type": "null"
        }
      ]
    },
    "registration": {
      "oneOf": [
        {
          "$ref": "#/$defs/Registration",
          "description": "Registration details"
        },
        {
          "type": "null"
        }
      ]
    },
    "accounts": {
      "oneOf": [
        {
          "$ref": "#/$defs/Accounts",
          "description": "Users and groups details"
        },
        {
          "type": "null"
        }
      ]
    },
    "timedate": {
      "oneOf": [
        {
          "$ref": "#/$defs/TimeDate",
          "description": "Time and date details"
        },
        {
          "type": "null"
        }
      ]
    },
    "locale": {
      "oneOf": [
        {
          "$ref": "#/$defs/Locale"
        },
        {
          "type": "null"
        }
      ]
    },
    "network": {
      "oneOf": [
        {
          "$ref": "#/$defs/Network",
          "description": "Networking details"
        },
        {
          "type": "null"
        }
      ]
    },
    "openscap": {
      "oneOf": [
        {
          "$ref": "#/$defs/OpenSCAP",
          "description": "From RHEL 8.7 \u0026 RHEL 9.1 support has been added for OpenSCAP build-time remediation"
        },
        {
          "type": "null"
        }
      ]
    },
    "systemd": {
      "oneOf": [
        {
          "$ref": "#/$defs/Systemd"
        },
        {
          "type": "null"
        }
      ]
    }
  },
  "additionalProperties": false,
  "type": "object",
  "required": [
    "name"
  ],
  "description": "Image Builder new blueprint schema.\n\nTHIS IS WORK IN PROGRESS"
}
