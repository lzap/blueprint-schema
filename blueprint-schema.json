{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/osbuild/blueprint-schema/blueprint",
  "$defs": {
    "Containers": {
      "properties": {
        "source": {
          "type": "string",
          "description": "Container image URL is a reference to a container image at a registry."
        },
        "name": {
          "type": "string",
          "description": "Container name is an optional string to set the name under which the container image will\nbe saved in the image. If not specified name falls back to the same value as source."
        },
        "tls_verify": {
          "type": "boolean",
          "description": "Verify TLS connection, default is true.",
          "default": true
        },
        "local_storage": {
          "type": "string",
          "description": "Whether to pull the container image from the host's local-storage."
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "source",
        "name"
      ]
    },
    "DNF": {
      "properties": {
        "packages": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Packages to install. Package name or NVRA is accepted as long as DNF can\nresolve it. Examples: vim-enhanced, vim-enhanced-9.1.866-1 or vim-enhanced-9.1.866-1.fc41.x86_64.\nThe packages can also be specified as @group_name to install all packages in the group."
            },
            {
              "type": "null"
            }
          ]
        },
        "groups": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Groups to install, must match exactly. Groups describes groups of packages to be installed into\nthe image. Package groups are defined in the repository metadata. Each group has a descriptive name\nused primarily for display in user interfaces and an ID more commonly used in kickstart files.\nHere, the ID is the expected way of listing a group. Groups have three different ways of categorizing\ntheir packages: mandatory, default, and optional. For the purposes of blueprints, only mandatory\nand default packages will be installed. There is no mechanism for selecting optional packages."
            },
            {
              "type": "null"
            }
          ]
        },
        "import_keys": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Additional file paths to the GPG keys to import. The files must be present in the image.\nDoes not support importing from URLs."
            },
            {
              "type": "null"
            }
          ]
        },
        "modules": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "Modules to enable or disable"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "FIPS": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enables the system FIPS mode (disabled by default). Currently only edge-raw-image, edge-installer,\nedge-simplified-installer, edge-ami and edge-vsphere images support this customization."
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Kernel": {
      "properties": {
        "package": {
          "type": "string",
          "description": "Kernel DNF package name to replace the standard kernel with."
        },
        "cmdline_append": {
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "An optional string to append arguments to the bootloader kernel command line. The list\nwill be concatenated with spaces."
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Network": {
      "properties": {
        "firewall": {
          "$ref": "#/$defs/NetworkFirewall",
          "description": "Firewall details - package firewalld must be installed in the image."
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "NetworkFirewall": {
      "properties": {
        "services": {
          "oneOf": [
            {
              "items": {
                "properties": {
                  "service": {
                    "type": "string"
                  },
                  "protocol": {
                    "type": "string",
                    "enum": [
                      "tcp",
                      "udp",
                      "any"
                    ],
                    "default": "any"
                  },
                  "enabled": {
                    "type": "boolean",
                    "default": true
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "service"
                ]
              },
              "type": "array",
              "description": "Services to enable or disable. The service name must be from the IANA list.\nAlternatively, you can specify a port or range using the ports field."
            },
            {
              "type": "null"
            }
          ]
        },
        "ports": {
          "oneOf": [
            {
              "items": {
                "oneOf": [
                  {
                    "required": [
                      "port"
                    ],
                    "title": "port"
                  },
                  {
                    "required": [
                      "from",
                      "to"
                    ],
                    "title": "from_to"
                  }
                ],
                "properties": {
                  "port": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                  },
                  "from": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                  },
                  "to": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                  },
                  "protocol": {
                    "type": "string",
                    "enum": [
                      "tcp",
                      "udp",
                      "any"
                    ],
                    "default": "any"
                  },
                  "enabled": {
                    "type": "boolean",
                    "default": true
                  }
                },
                "additionalProperties": false,
                "type": "object"
              },
              "type": "array",
              "description": "Ports or ranges to enable or disable"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "RedHatRegistration": {
      "properties": {
        "activation_key": {
          "type": "string",
          "description": "Subscription manager activation key to use during registration."
        },
        "organization": {
          "type": "string",
          "description": "Subscription manager organization ID to use during registration."
        },
        "subscription_manager": {
          "oneOf": [
            {
              "$ref": "#/$defs/SubscriptionManagerRegistration",
              "description": "Subscription manager details (internal use only). The customization expects that subscription-manager\npackage is installed in the image, which is by default part of the RHEL distribution bootable images.\nTo explicitly install the package, add it to the packages section in the blueprint.\nThe customization is not supported on Fedora distribution images."
            },
            {
              "type": "null"
            }
          ]
        },
        "insights": {
          "oneOf": [
            {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "required": [
                "enabled"
              ],
              "description": "Red Hat Insights client details."
            },
            {
              "type": "null"
            }
          ]
        },
        "connector": {
          "oneOf": [
            {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "required": [
                "enabled"
              ],
              "description": "Red Hat console.redhat.com connector (rhc) details."
            },
            {
              "type": "null"
            }
          ]
        },
        "fdo": {
          "oneOf": [
            {
              "properties": {
                "manufacturing_server_url": {
                  "type": "string"
                },
                "diun_pub_key_insecure": {
                  "type": "boolean"
                },
                "diun_pub_key_hash": {
                  "type": "string"
                },
                "diun_pub_key_root_certs": {
                  "type": "string"
                },
                "di_mfg_string_type_mac_iface": {
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "FDO details"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "activation_key",
        "organization",
        "subscription_manager",
        "insights",
        "connector"
      ]
    },
    "Registration": {
      "properties": {
        "redhat": {
          "$ref": "#/$defs/RedHatRegistration",
          "description": "Registration details for Red Hat operating system images."
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "SubscriptionManagerRegistration": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enables the subscription-manager DNF plugin.",
          "default": true
        },
        "product_plugin_enabled": {
          "type": "boolean",
          "description": "Enables the product-id DNF plugin.",
          "default": true
        },
        "repository_management": {
          "type": "boolean",
          "description": "Enabled repository_management plugin configuration.",
          "default": true
        },
        "auto_registration": {
          "type": "boolean",
          "description": "Enabled auto_registration plugin configuration.",
          "default": true
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "enabled",
        "product_plugin_enabled",
        "repository_management",
        "auto_registration"
      ]
    }
  },
  "properties": {
    "name": {
      "type": "string",
      "description": "The name attribute is a string that contains the name of the blueprint. It can contain spaces,\nbut they may be converted to dash characters during build. It should be short and descriptive."
    },
    "description": {
      "type": "string",
      "description": "The description attribute is a string that can be a longer description of the blueprint and is\nonly used for display purposes."
    },
    "hostname": {
      "type": "string",
      "description": "Hostname is an optional string that can be used to configure the hostname of the final image."
    },
    "kernel": {
      "oneOf": [
        {
          "$ref": "#/$defs/Kernel",
          "description": "Custom Linux kernel details, optional."
        },
        {
          "type": "null"
        }
      ]
    },
    "fips": {
      "oneOf": [
        {
          "$ref": "#/$defs/FIPS",
          "description": "FIPS details, optional."
        },
        {
          "type": "null"
        }
      ]
    },
    "dnf": {
      "oneOf": [
        {
          "$ref": "#/$defs/DNF",
          "description": "DNF package managers details. When using virtual provides as the package name the version glob\nshould be *. And be aware that you will be unable to freeze the blueprint. This is because the\nprovides will expand into multiple packages with their own names and versions."
        },
        {
          "type": "null"
        }
      ]
    },
    "containers": {
      "oneOf": [
        {
          "items": {
            "$ref": "#/$defs/Containers"
          },
          "type": "array",
          "description": "Containers to be pulled during the image build and stored in the image at the default local\ncontainer storage location that is appropriate for the image type, so that all supported container\ntools like podman and cri-o will be able to work with it.\nThe embedded containers are not started, to do so you can create systemd unit files or quadlets with\nthe files customization."
        },
        {
          "type": "null"
        }
      ]
    },
    "registration": {
      "oneOf": [
        {
          "$ref": "#/$defs/Registration",
          "description": "Registration details"
        },
        {
          "type": "null"
        }
      ]
    },
    "network": {
      "oneOf": [
        {
          "$ref": "#/$defs/Network",
          "description": "Networking details"
        },
        {
          "type": "null"
        }
      ]
    }
  },
  "additionalProperties": false,
  "type": "object",
  "required": [
    "name"
  ],
  "description": "Blueprint type prototype\n\nThis is just a brief example of a common blueprint structure. Just few fields\nwere selected to demonstrate the JSON schema.\n\nThese Go comments do appear in the JSON Schema so the final version of the\nblueprint will be broken up into multiple files and the comments will be\nmoch more extensive.\n\nTODO: Break all anonymous struct into named structs. Break this .go file into\nmultiple files."
}
